{"version":3,"sources":["SidePagerCount.js","components/SideBar.js","components/Intro.js","components/SkillBar.js","components/Skills.js","components/ProjectCard.js","components/Projects.js","components/Contact.js","ScrollPager.js","App.js","serviceWorker.js","index.js"],"names":["SidePagerCount","props","className","style","listStyleType","page","pageCount","color","pageName","children","defaultProps","diff","SideBar","React","useState","dropDown","setDropDown","openCloseHandler","bool","mystyle","width","id","onClick","elements","map","value","index","setPage","clickOnLink","height","marginRight","Intro","circles","Array","keys","x","push","key","textAlign","backgroundSize","title","items","rotatedTexts","emptyPause","backgroundColor","backgroundImage","SkillBar","i","skillR","skillExperterize","skillName","Skills","marginTop","columnClassName","ProjectCard","langs","lang","forEach","e","para","href","padding","borderRadius","src","Projects","properties","duration","transitionDuration","infinite","indicators","arrows","pauseOnHover","onChange","oldIndex","newIndex","cards","proj","name","Contact","class","intro","target","imgsrc","ScrollPager","setLastPage","pageOnChange","v","customPageNumber","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8cab5bcf.chunk.js","sourcesContent":["import React from 'react';\r\nimport './pc.css';\r\n\r\n\r\nconst SidePagerCount = props => {\r\n    return(\r\n        <div className=\"page-row\">\r\n            <div className=\"slide-indicator page-column cleft\">\r\n                <ul style={{listStyleType: 'none'}}>\r\n                <li className=\"page__num\" >{props.page}</li>\r\n                <li className=\"separator\" ></li> \r\n                <li className=\"page__count\">{props.pageCount}</li>\r\n                <li className=\"page__name\" style={{color: 'rgb(164, 160, 155)'}}>{props.pageName}</li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"page-column cright\">\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nSidePagerCount.defaultProps = {\r\n    diff: 0,\r\n    page: 1,\r\n    pageCount: 4,\r\n    pageName: \"name\"\r\n}\r\nexport default SidePagerCount;","import React from 'react'\r\nimport '../FPN.css'\r\nconst SideBar = props => {\r\n    const [dropDown, setDropDown] = React.useState('0%');\r\n    const openCloseHandler = bool => {\r\n        if(dropDown === '100%')\r\n            setDropDown('0%');\r\n        else\r\n            setDropDown('100%');\r\n    };\r\n    const mystyle = {\r\n        width: dropDown\r\n    };\r\n    const clickOnLink = (index) => {\r\n        props.setPage(index);\r\n        openCloseHandler(dropDown);\r\n    }\r\n    return (\r\n        <div id=\"myNav\">\r\n            <div className=\"overlay blackbg\" style={mystyle}>\r\n                <a className=\"closebtn\" onClick={() => openCloseHandler(dropDown)}>×</a>\r\n                <div className=\"overlay-content\">\r\n                    {/* <a onClick={() => {props.setPage(0); openCloseHandler(dropDown)}}>Intro</a>\r\n                    <a onClick={() => {props.setPage(1); openCloseHandler(dropDown)}}>Skills</a>\r\n                    <a onClick={() => {prosp.setPage(2); openCloseHandler(dropDown)}}>About Me</a>\r\n                    <a onClick={() => {props.setPage(3); openCloseHandler(dropDown)}}>Contact</a> */}\r\n                {   \r\n                    props.elements.map((value, index) =>  <a onClick={() => clickOnLink(index)}>{value}</a>)\r\n                }\r\n                </div>\r\n            </div>\r\n            <div className=\"overlay\" style={{width: \"max-content\", height: '100%', marginRight: '10px'}} >\r\n                <h1 onClick={() => openCloseHandler(dropDown)}>☰</h1>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nSideBar.defaultProps = {\r\n    setPage: (index) => {},\r\n    elements: []\r\n}\r\nexport default SideBar;","import React from \"react\";\r\nimport ReactRotatingText from 'react-rotating-text'\r\nimport '../circle.scss'\r\n\r\nconst Intro = props => {\r\n    var circles = []\r\n    for(const x of Array(7).keys())\r\n        circles.push(<div key = {\"circle\" + x}className=\"circle\"/>);\r\n    \r\n    const introStyle = {\r\n        textAlign: 'center',\r\n        // backgroundColor: props.backgroundColor,\r\n\r\n        backgroundSize: \"100% 100%\",\r\n        // backgroundImage: \"url('images/green-pine-trees-covered-with-fogs-under-white-sky-during.jpg')\"\r\n    }\r\n    return (\r\n        <div className=\"component large-font\" style={introStyle}>\r\n            <h2 className=\"white\">{props.title}</h2>\r\n            <div className=\"medium-font\">\r\n                <ReactRotatingText  items={props.rotatedTexts} emptyPause={500} />\r\n            </div>\r\n            {circles}\r\n        </div>\r\n    );\r\n}\r\n\r\nIntro.defaultProps = {\r\n    title: \"Hey there! I'm Ankit\",\r\n    rotatedTexts: [\"I'M AN INTROVERT.\", \"ANIME LOVER\", \"AND A PROGRAMMER\", \"ENOUGH OF THE INTRO\", \"SCROLL DOWN!!!\"],\r\n    backgroundColor: \"white\",\r\n    backgroundImage: ''\r\n}\r\n\r\nexport default Intro;","import React from 'react';\r\nimport './skillbar.css';\r\nconst SkillBar = props => {\r\n    \r\n    const skillR = [];\r\n    var i;\r\n    for(i = 0; i < props.skillExperterize; i++)\r\n        skillR.push(<span className=\"box selected-box\"></span>)\r\n    for(; i < 5; i++)\r\n        skillR.push(<span className=\"box not-selected-box\"></span>)\r\n    return (\r\n        <div className={props.className}>\r\n            <p>{props.skillName}</p>\r\n            {skillR}\r\n        </div>\r\n    );\r\n};\r\n\r\nSkillBar.defaultProps = {\r\n    className: \"\",\r\n    skillName: \"skill\",\r\n    skillExperterize: 4\r\n};\r\n\r\nexport default SkillBar;\r\n","import React from 'react';\r\nimport Masonry from 'react-masonry-css';\r\nimport SkillBar from './SkillBar';\r\n\r\n\r\nconst Skills = props =>{\r\n    const skillStyle = {\r\n        marginTop: '18%',\r\n    }\r\n    return (\r\n        <div style={skillStyle}>\r\n            <Masonry\r\n            className=\"my-masonry-grid\"\r\n            columnClassName=\"my-masonry-grid_column\">\r\n                <SkillBar skillName=\"C++\" skillExperterize={4}/>\r\n                <SkillBar skillName=\"Java\" skillExperterize={4}/>\r\n                <SkillBar skillName=\"Android\" skillExperterize={4}/>\r\n                <SkillBar skillName=\"Mysql\" skillExperterize={4}/>\r\n                <SkillBar skillName=\"Java Script\" skillExperterize={3}/>\r\n                <SkillBar skillName=\"Unreal Engine 4\" skillExperterize={2}/>\r\n            </Masonry>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Skills;","import React from 'react';\r\n// import './hover_card.css';\r\nimport './card1.css';\r\n\r\nconst ProjectCard = props => {\r\n    const langs = [];\r\n    props.lang.forEach(e => langs.push(<span className=\"tags\">{e}</span>));\r\n    return (\r\n    <section className=\"card-section\">\r\n    <h1>{props.title}</h1>\r\n    <div className=\"card-content\">\r\n        <p>{props.para}</p>\r\n        <a href=\"\" style={{padding: '8px', borderRadius: '0'}} >Learn more</a>\r\n    </div>\r\n    <div className=\"img\" ><img src=\"https://images.unsplash.com/photo-1445966275305-9806327ea2b5?ixlib=rb-0.3.5&amp;q=85&amp;fm=jpg&amp;crop=entropy&amp;cs=srgb&amp;ixid=eyJhcHBfaWQiOjE0NTg5fQ&amp;s=14a02fab1200216368d682ecaa91e540\"/>\r\n        </div>\r\n    </section>\r\n    );\r\n\r\n};\r\n\r\nProjectCard.defaultProps = {\r\n    className: \"\",\r\n    style: {},\r\n    onClick: null,\r\n    para: \"\",\r\n    lang: []\r\n};\r\n\r\nexport default ProjectCard;","import React from 'react'\r\nimport ProjectCard from './ProjectCard';\r\nimport { Slide } from 'react-slideshow-image';\r\nimport './c.css'\r\n\r\nconst Projects = props => {\r\n    \r\n    const numCard = 5;\r\n    const properties = {\r\n        duration: 5000,\r\n        transitionDuration: 500,\r\n        infinite: true,\r\n        indicators: true,\r\n        arrows: true,\r\n        pauseOnHover: true,\r\n        onChange: (oldIndex, newIndex) => {\r\n        //   console.log(`slide transition from ${oldIndex} to ${newIndex}`);\r\n        }\r\n      }\r\n    const cards = [];\r\n    const proj = [\r\n        {\r\n            title:\"Portfolio V1\",\r\n            name:\"Portfolio website which is begin watched by you right now.\",\r\n            lang:[\"React\"]\r\n        },\r\n        {\r\n            title:\"Tour and Travels\",\r\n            name:\"Tour and Travels app for booking hotels, flites or holiday packages\",\r\n            lang:[\"Android\", \"Java\", \"NodeJs\"]\r\n        },\r\n        {\r\n            title:\"Time Management\",\r\n            name:\"Time management app to manage your schedule\",\r\n            lang:[\"Android\", \"Java\", \"NodeJs\"]\r\n        },\r\n        {\r\n            title:\"FreeVPN Fetcher\",\r\n            name:\"A simple web scrapping tool to fetech user name and password from FreeVPN site.\",\r\n            lang:[\"Python\"]\r\n        },\r\n        {\r\n            title:\"Mini Akinator\",\r\n            name:\"Mini Akitnator specific to Harry Potter series which can guess any character from Harry Potter.\",\r\n            lang:[\"Java\"]\r\n        },\r\n        {\r\n            title:\"Spam Message Detector\",\r\n            name:\"Spam Detector which detects a given message is a spam mail or not.\",\r\n            lang:[\"Python\"]\r\n        }\r\n    ];\r\n\r\n    for(var i = 0; i < numCard; i++){\r\n        cards.push(<ProjectCard title={proj[i].title} para={proj[i].name} lang={proj[i].lang}/>)\r\n    }\r\n    \r\n    const breakpointColumnsObj = {\r\n        default: 3,\r\n        1100: 3,\r\n        700: 2,\r\n        500: 1,\r\n      };\r\n      const skillStyle = {\r\n        marginLeft: '18%',\r\n        marginRight: '10%'\r\n    }\r\n    return (\r\n        <div>\r\n            {/* <Masonry\r\n                breakpointCols={breakpointColumnsObj}\r\n                className=\"my-masonry-grid\"\r\n                columnClassName=\"my-masonry-grid_column\"> */}\r\n              {/* <Slider dots> */}\r\n              <div className=\"slide-container\">\r\n                <Slide {...properties}>\r\n                    {cards}\r\n                </Slide>\r\n            </div>\r\n            {/* </Slider> */}\r\n            {/* </Masonry> */}\r\n        </div>    \r\n    );\r\n};\r\n\r\nexport default Projects;","import React from 'react';\r\nimport './contact.css';\r\n\r\nconst Contact = props => {\r\n        return (\r\n        <div class=\"home-page page\">\r\n            <div class=\"container\">\r\n                <div class=\"container-home\">\r\n                <div class=\"text-center\">\r\n                    <img src={process.env.PUBLIC_URL +  \"/images/my.jpg\"} height=\"120\" width=\"120\"/>\r\n                </div>\r\n                <h1 class=\"text-center\">\r\n                    <a href=\"http://localhost:3000/\">Absolank<span class=\"tiny-space\"> </span>/<span class=\"tiny-space\"> </span>Ankit</a></h1>\r\n                <p class=\"lead text-center\">{props.intro}</p>\r\n                </div>\r\n                <div class=\"text-center\">\r\n                <p id=\"talk-box\" class=\"text-primary\">&nbsp;</p>\r\n                </div>\r\n                <div class=\"home-social-container text-center\">\r\n                <ul class=\"home-social\">\r\n                    <li>\r\n                    <a href=\"http://localhost:3000/\" target=\"_blank\">\r\n                        <i class=\"fa fa-facebook\"></i>\r\n                    </a>\r\n                    </li>\r\n                    <li>\r\n                    <a href=\"http://localhost:3000/\" target=\"_blank\">\r\n                        <i class=\"fa fa-youtube\"></i>\r\n                    </a>\r\n                    </li>\r\n                    <li>\r\n                    <a href=\"http://localhost:3000/\" target=\"_blank\">\r\n                        <i class=\"fa fa-linkedin\"></i>\r\n                    </a>\r\n                    </li>\r\n                    <li>\r\n                    <a href=\"http://localhost:3000/\" target=\"_blank\">\r\n                        <i class=\"fa fa-github\"></i>\r\n                    </a>\r\n                    </li>\r\n                </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nContact.defaultProps = {\r\n    name:\"Ankit Kripal\",\r\n    intro: \"I'm Ankit Kripal a 3rd year undergraduate student in Information Technology at IIIT Allahabad. \" +\r\n    \"An introverted guy who usually don't like socializing until it's necessary and cares for self improvement and life long learning. \" +\r\n    \"I like mathematics, problem solving and programming. My favourite programming language is C++. \" + \r\n    \"I'm also intrested in Machine Learning and Artificial Intelligence. \" +\r\n    \"As for my hobbies I like playing computer games (hardcore Devil May Cry fan), listening to music, watching anime / tv series. \" +\r\n    \"If you like to collaborate or hire me for a project feel free to contact me.\",\r\n    imgsrc: \"/images/my.jpg\"\r\n    \r\n};\r\nexport default Contact;","import React from \"react\";\r\nimport ReactPageScroller from 'react-page-scroller';\r\nimport './FPN.css';\r\nimport './pc.css';\r\nimport SidePagerCount from \"./SidePagerCount\";\r\nimport SideBar from './components/SideBar';\r\nimport Intro from './components/Intro';\r\nimport Skills from './components/Skills';\r\nimport Projects from './components/Projects';\r\nimport Contact from './components/Contact';\r\n\r\n\r\nconst ScrollPager = ()=>{\r\n    const [page, setPage] = React.useState(0);\r\n    const [last, setLastPage] = React.useState(0);\r\n    const pageName = [\"Intro\", \"Skills\", \"Projects\", \"Contact\" ];\r\n\r\n    // const color = ['#FBFBF9', '#B0B09B', '#E41945', '#B1103C', '#281624'];\r\n    // const color = ['#363D41', '#34BA94', '#13C9DB', '#F38F2D', '#EC6A40']\r\n    // const color = ['#131925', '#1e698d', '#CABD8F', '#c2d5db', '#8abca7']\r\n    // const color = ['#000000', '#000000', '#000000', '#000000', '#000000']\r\n    // const color = ['#2a1b3d', '#0b0c10', '#2a2438', '#411e8f', '#310a5d'];   \r\n    const color = ['#000FFF', '#FFFFFF', '#FFFFFF', '#FFFFFF', '#FFFFFF'];\r\n\r\n    \r\n    return (\r\n        <div>\r\n            <SideBar setPage={setPage} elements={pageName}/>\r\n            <ReactPageScroller pageOnChange = {(page) => setPage(v => {\r\n                setLastPage(v);\r\n                return page;\r\n            })} customPageNumber = {page}>\r\n                <Intro backgroundColor={color[0]}/>\r\n                <div className=\"component\" style={{backgroundColor: color[1], backgroundSize: \"100% 100%\"}}>\r\n                    <SidePagerCount page={1} pageCount={3} pageName={pageName[1]}>\r\n                        <Skills/>\r\n                    </SidePagerCount>\r\n                </div>\r\n                <div className=\"component\" style={{backgroundColor: color[2]}}>\r\n                    <SidePagerCount page={2} pageCount={3} pageName={pageName[2]}>\r\n                        <Projects/>\r\n                    </SidePagerCount>\r\n                </div>\r\n\r\n                <div className=\"component\" style={{backgroundColor: color[3]}}>\r\n                   <SidePagerCount page={3} pageCount={3} pageName={pageName[3]}>\r\n                        <Contact/>\r\n                   </SidePagerCount>\r\n                </div>\r\n            </ReactPageScroller>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ScrollPager;","import React from 'react';\r\nimport ScrollPager from './ScrollPager';\r\nfunction App() {\r\n  return (\r\n    <ScrollPager/>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom'; \r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}